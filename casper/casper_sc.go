// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package casper

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// CasperABI is the input ABI used to generate the binding from.
const CasperABI = "[{\"constant\":false,\"inputs\":[{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"confirmUpload\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"srcIp\",\"type\":\"string\"}],\"name\":\"getPingTarget\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"confirmDownload\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSystemState\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllPeers\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ip\",\"type\":\"string\"}],\"name\":\"removeProviderMachine\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"confirmUpdate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"chunk\",\"type\":\"uint128\"},{\"name\":\"size\",\"type\":\"uint256\"},{\"name\":\"ip\",\"type\":\"string\"}],\"name\":\"notifyReplicationTarget\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"string\"}],\"name\":\"getStoringPeers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"getFile\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"clearPrepay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"client\",\"type\":\"address\"}],\"name\":\"isPrepaid\",\"outputs\":[{\"name\":\"prepaid\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"chunk\",\"type\":\"uint128\"},{\"name\":\"size\",\"type\":\"uint256\"},{\"name\":\"ip\",\"type\":\"string\"}],\"name\":\"notifyReplicationSuccess\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"getPeers\",\"outputs\":[{\"name\":\"ip1\",\"type\":\"string\"},{\"name\":\"ip2\",\"type\":\"string\"},{\"name\":\"ip3\",\"type\":\"string\"},{\"name\":\"ip4\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ip\",\"type\":\"string\"}],\"name\":\"setBootstrap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"pay\",\"type\":\"uint256\"}],\"name\":\"prePay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ip\",\"type\":\"string\"}],\"name\":\"getNumberOfFiles\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"confirmTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"registerProvider\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"removeAllPeers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ip\",\"type\":\"string\"}],\"name\":\"verifyReplication\",\"outputs\":[{\"name\":\"isBanned\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"uuid\",\"type\":\"uint128\"}],\"name\":\"notifyDelete\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"source\",\"type\":\"string\"}],\"name\":\"stringToBytes32\",\"outputs\":[{\"name\":\"result\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBootstrap\",\"outputs\":[{\"name\":\"ip\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"sendPingResult\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"notifySpaceFreed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ip\",\"type\":\"string\"}],\"name\":\"machineInformation\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"addProviderMachine\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"info\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ProviderCheckEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"banned\",\"type\":\"string\"}],\"name\":\"ProviderOffline\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"val\",\"type\":\"string\"}],\"name\":\"ReturnString\",\"type\":\"event\"}]"

// CasperBin is the compiled bytecode used for deploying new contracts.
const CasperBin = ``

// DeployCasper deploys a new Ethereum contract, binding an instance of Casper to it.
func DeployCasper(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Casper, error) {
	parsed, err := abi.JSON(strings.NewReader(CasperABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(CasperBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Casper{CasperCaller: CasperCaller{contract: contract}, CasperTransactor: CasperTransactor{contract: contract}, CasperFilterer: CasperFilterer{contract: contract}}, nil
}

// Casper is an auto generated Go binding around an Ethereum contract.
type Casper struct {
	CasperCaller     // Read-only binding to the contract
	CasperTransactor // Write-only binding to the contract
	CasperFilterer   // Log filterer for contract events
}

// CasperCaller is an auto generated read-only Go binding around an Ethereum contract.
type CasperCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// CasperTransactor is an auto generated write-only Go binding around an Ethereum contract.
type CasperTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// CasperFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type CasperFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// CasperSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type CasperSession struct {
	Contract     *Casper           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// CasperCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type CasperCallerSession struct {
	Contract *CasperCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// CasperTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type CasperTransactorSession struct {
	Contract     *CasperTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// CasperRaw is an auto generated low-level Go binding around an Ethereum contract.
type CasperRaw struct {
	Contract *Casper // Generic contract binding to access the raw methods on
}

// CasperCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type CasperCallerRaw struct {
	Contract *CasperCaller // Generic read-only contract binding to access the raw methods on
}

// CasperTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type CasperTransactorRaw struct {
	Contract *CasperTransactor // Generic write-only contract binding to access the raw methods on
}

// NewCasper creates a new instance of Casper, bound to a specific deployed contract.
func NewCasper(address common.Address, backend bind.ContractBackend) (*Casper, error) {
	contract, err := bindCasper(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Casper{CasperCaller: CasperCaller{contract: contract}, CasperTransactor: CasperTransactor{contract: contract}, CasperFilterer: CasperFilterer{contract: contract}}, nil
}

// NewCasperCaller creates a new read-only instance of Casper, bound to a specific deployed contract.
func NewCasperCaller(address common.Address, caller bind.ContractCaller) (*CasperCaller, error) {
	contract, err := bindCasper(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &CasperCaller{contract: contract}, nil
}

// NewCasperTransactor creates a new write-only instance of Casper, bound to a specific deployed contract.
func NewCasperTransactor(address common.Address, transactor bind.ContractTransactor) (*CasperTransactor, error) {
	contract, err := bindCasper(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &CasperTransactor{contract: contract}, nil
}

// NewCasperFilterer creates a new log filterer instance of Casper, bound to a specific deployed contract.
func NewCasperFilterer(address common.Address, filterer bind.ContractFilterer) (*CasperFilterer, error) {
	contract, err := bindCasper(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &CasperFilterer{contract: contract}, nil
}

// bindCasper binds a generic wrapper to an already deployed contract.
func bindCasper(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(CasperABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Casper *CasperRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Casper.Contract.CasperCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Casper *CasperRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Casper.Contract.CasperTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Casper *CasperRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Casper.Contract.CasperTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Casper *CasperCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Casper.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Casper *CasperTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Casper.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Casper *CasperTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Casper.Contract.contract.Transact(opts, method, params...)
}

// GetAllPeers is a free data retrieval call binding the contract method 0x2d62b810.
//
// Solidity: function getAllPeers() constant returns(bytes32[])
func (_Casper *CasperCaller) GetAllPeers(opts *bind.CallOpts) ([][32]byte, error) {
	var (
		ret0 = new([][32]byte)
	)
	out := ret0
	err := _Casper.contract.Call(opts, out, "getAllPeers")
	return *ret0, err
}

// GetAllPeers is a free data retrieval call binding the contract method 0x2d62b810.
//
// Solidity: function getAllPeers() constant returns(bytes32[])
func (_Casper *CasperSession) GetAllPeers() ([][32]byte, error) {
	return _Casper.Contract.GetAllPeers(&_Casper.CallOpts)
}

// GetAllPeers is a free data retrieval call binding the contract method 0x2d62b810.
//
// Solidity: function getAllPeers() constant returns(bytes32[])
func (_Casper *CasperCallerSession) GetAllPeers() ([][32]byte, error) {
	return _Casper.Contract.GetAllPeers(&_Casper.CallOpts)
}

// GetBootstrap is a free data retrieval call binding the contract method 0xd9290af9.
//
// Solidity: function getBootstrap() constant returns(ip string)
func (_Casper *CasperCaller) GetBootstrap(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _Casper.contract.Call(opts, out, "getBootstrap")
	return *ret0, err
}

// GetBootstrap is a free data retrieval call binding the contract method 0xd9290af9.
//
// Solidity: function getBootstrap() constant returns(ip string)
func (_Casper *CasperSession) GetBootstrap() (string, error) {
	return _Casper.Contract.GetBootstrap(&_Casper.CallOpts)
}

// GetBootstrap is a free data retrieval call binding the contract method 0xd9290af9.
//
// Solidity: function getBootstrap() constant returns(ip string)
func (_Casper *CasperCallerSession) GetBootstrap() (string, error) {
	return _Casper.Contract.GetBootstrap(&_Casper.CallOpts)
}

// GetFile is a free data retrieval call binding the contract method 0x6cf0d392.
//
// Solidity: function getFile(ip string, n uint256) constant returns(string, uint256)
func (_Casper *CasperCaller) GetFile(opts *bind.CallOpts, ip string, n *big.Int) (string, *big.Int, error) {
	var (
		ret0 = new(string)
		ret1 = new(*big.Int)
	)
	out := &[]interface{}{
		ret0,
		ret1,
	}
	err := _Casper.contract.Call(opts, out, "getFile", ip, n)
	return *ret0, *ret1, err
}

// GetFile is a free data retrieval call binding the contract method 0x6cf0d392.
//
// Solidity: function getFile(ip string, n uint256) constant returns(string, uint256)
func (_Casper *CasperSession) GetFile(ip string, n *big.Int) (string, *big.Int, error) {
	return _Casper.Contract.GetFile(&_Casper.CallOpts, ip, n)
}

// GetFile is a free data retrieval call binding the contract method 0x6cf0d392.
//
// Solidity: function getFile(ip string, n uint256) constant returns(string, uint256)
func (_Casper *CasperCallerSession) GetFile(ip string, n *big.Int) (string, *big.Int, error) {
	return _Casper.Contract.GetFile(&_Casper.CallOpts, ip, n)
}

// GetNumberOfFiles is a free data retrieval call binding the contract method 0xafffcb9d.
//
// Solidity: function getNumberOfFiles(ip string) constant returns(uint256)
func (_Casper *CasperCaller) GetNumberOfFiles(opts *bind.CallOpts, ip string) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Casper.contract.Call(opts, out, "getNumberOfFiles", ip)
	return *ret0, err
}

// GetNumberOfFiles is a free data retrieval call binding the contract method 0xafffcb9d.
//
// Solidity: function getNumberOfFiles(ip string) constant returns(uint256)
func (_Casper *CasperSession) GetNumberOfFiles(ip string) (*big.Int, error) {
	return _Casper.Contract.GetNumberOfFiles(&_Casper.CallOpts, ip)
}

// GetNumberOfFiles is a free data retrieval call binding the contract method 0xafffcb9d.
//
// Solidity: function getNumberOfFiles(ip string) constant returns(uint256)
func (_Casper *CasperCallerSession) GetNumberOfFiles(ip string) (*big.Int, error) {
	return _Casper.Contract.GetNumberOfFiles(&_Casper.CallOpts, ip)
}

// GetPeers is a free data retrieval call binding the contract method 0x9b92f9b1.
//
// Solidity: function getPeers(size uint256) constant returns(ip1 string, ip2 string, ip3 string, ip4 string)
func (_Casper *CasperCaller) GetPeers(opts *bind.CallOpts, size *big.Int) (struct {
	Ip1 string
	Ip2 string
	Ip3 string
	Ip4 string
}, error) {
	ret := new(struct {
		Ip1 string
		Ip2 string
		Ip3 string
		Ip4 string
	})
	out := ret
	err := _Casper.contract.Call(opts, out, "getPeers", size)
	return *ret, err
}

// GetPeers is a free data retrieval call binding the contract method 0x9b92f9b1.
//
// Solidity: function getPeers(size uint256) constant returns(ip1 string, ip2 string, ip3 string, ip4 string)
func (_Casper *CasperSession) GetPeers(size *big.Int) (struct {
	Ip1 string
	Ip2 string
	Ip3 string
	Ip4 string
}, error) {
	return _Casper.Contract.GetPeers(&_Casper.CallOpts, size)
}

// GetPeers is a free data retrieval call binding the contract method 0x9b92f9b1.
//
// Solidity: function getPeers(size uint256) constant returns(ip1 string, ip2 string, ip3 string, ip4 string)
func (_Casper *CasperCallerSession) GetPeers(size *big.Int) (struct {
	Ip1 string
	Ip2 string
	Ip3 string
	Ip4 string
}, error) {
	return _Casper.Contract.GetPeers(&_Casper.CallOpts, size)
}

// GetStoringPeers is a free data retrieval call binding the contract method 0x63f17cda.
//
// Solidity: function getStoringPeers(hash string) constant returns(uint256)
func (_Casper *CasperCaller) GetStoringPeers(opts *bind.CallOpts, hash string) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Casper.contract.Call(opts, out, "getStoringPeers", hash)
	return *ret0, err
}

// GetStoringPeers is a free data retrieval call binding the contract method 0x63f17cda.
//
// Solidity: function getStoringPeers(hash string) constant returns(uint256)
func (_Casper *CasperSession) GetStoringPeers(hash string) (*big.Int, error) {
	return _Casper.Contract.GetStoringPeers(&_Casper.CallOpts, hash)
}

// GetStoringPeers is a free data retrieval call binding the contract method 0x63f17cda.
//
// Solidity: function getStoringPeers(hash string) constant returns(uint256)
func (_Casper *CasperCallerSession) GetStoringPeers(hash string) (*big.Int, error) {
	return _Casper.Contract.GetStoringPeers(&_Casper.CallOpts, hash)
}

// GetSystemState is a free data retrieval call binding the contract method 0x28fa777f.
//
// Solidity: function getSystemState() constant returns(uint256, uint256, uint256, uint256, uint256)
func (_Casper *CasperCaller) GetSystemState(opts *bind.CallOpts) (*big.Int, *big.Int, *big.Int, *big.Int, *big.Int, error) {
	var (
		ret0 = new(*big.Int)
		ret1 = new(*big.Int)
		ret2 = new(*big.Int)
		ret3 = new(*big.Int)
		ret4 = new(*big.Int)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
		ret4,
	}
	err := _Casper.contract.Call(opts, out, "getSystemState")
	return *ret0, *ret1, *ret2, *ret3, *ret4, err
}

// GetSystemState is a free data retrieval call binding the contract method 0x28fa777f.
//
// Solidity: function getSystemState() constant returns(uint256, uint256, uint256, uint256, uint256)
func (_Casper *CasperSession) GetSystemState() (*big.Int, *big.Int, *big.Int, *big.Int, *big.Int, error) {
	return _Casper.Contract.GetSystemState(&_Casper.CallOpts)
}

// GetSystemState is a free data retrieval call binding the contract method 0x28fa777f.
//
// Solidity: function getSystemState() constant returns(uint256, uint256, uint256, uint256, uint256)
func (_Casper *CasperCallerSession) GetSystemState() (*big.Int, *big.Int, *big.Int, *big.Int, *big.Int, error) {
	return _Casper.Contract.GetSystemState(&_Casper.CallOpts)
}

// IsPrepaid is a free data retrieval call binding the contract method 0x73e07e14.
//
// Solidity: function isPrepaid(client address) constant returns(prepaid bool)
func (_Casper *CasperCaller) IsPrepaid(opts *bind.CallOpts, client common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Casper.contract.Call(opts, out, "isPrepaid", client)
	return *ret0, err
}

// IsPrepaid is a free data retrieval call binding the contract method 0x73e07e14.
//
// Solidity: function isPrepaid(client address) constant returns(prepaid bool)
func (_Casper *CasperSession) IsPrepaid(client common.Address) (bool, error) {
	return _Casper.Contract.IsPrepaid(&_Casper.CallOpts, client)
}

// IsPrepaid is a free data retrieval call binding the contract method 0x73e07e14.
//
// Solidity: function isPrepaid(client address) constant returns(prepaid bool)
func (_Casper *CasperCallerSession) IsPrepaid(client common.Address) (bool, error) {
	return _Casper.Contract.IsPrepaid(&_Casper.CallOpts, client)
}

// MachineInformation is a free data retrieval call binding the contract method 0xf8c5df33.
//
// Solidity: function machineInformation(ip string) constant returns(uint256)
func (_Casper *CasperCaller) MachineInformation(opts *bind.CallOpts, ip string) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Casper.contract.Call(opts, out, "machineInformation", ip)
	return *ret0, err
}

// MachineInformation is a free data retrieval call binding the contract method 0xf8c5df33.
//
// Solidity: function machineInformation(ip string) constant returns(uint256)
func (_Casper *CasperSession) MachineInformation(ip string) (*big.Int, error) {
	return _Casper.Contract.MachineInformation(&_Casper.CallOpts, ip)
}

// MachineInformation is a free data retrieval call binding the contract method 0xf8c5df33.
//
// Solidity: function machineInformation(ip string) constant returns(uint256)
func (_Casper *CasperCallerSession) MachineInformation(ip string) (*big.Int, error) {
	return _Casper.Contract.MachineInformation(&_Casper.CallOpts, ip)
}

// VerifyReplication is a free data retrieval call binding the contract method 0xc16d54c9.
//
// Solidity: function verifyReplication(ip string) constant returns(isBanned bool)
func (_Casper *CasperCaller) VerifyReplication(opts *bind.CallOpts, ip string) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Casper.contract.Call(opts, out, "verifyReplication", ip)
	return *ret0, err
}

// VerifyReplication is a free data retrieval call binding the contract method 0xc16d54c9.
//
// Solidity: function verifyReplication(ip string) constant returns(isBanned bool)
func (_Casper *CasperSession) VerifyReplication(ip string) (bool, error) {
	return _Casper.Contract.VerifyReplication(&_Casper.CallOpts, ip)
}

// VerifyReplication is a free data retrieval call binding the contract method 0xc16d54c9.
//
// Solidity: function verifyReplication(ip string) constant returns(isBanned bool)
func (_Casper *CasperCallerSession) VerifyReplication(ip string) (bool, error) {
	return _Casper.Contract.VerifyReplication(&_Casper.CallOpts, ip)
}

// AddProviderMachine is a paid mutator transaction binding the contract method 0xfde18f47.
//
// Solidity: function addProviderMachine(ip string, size uint256) returns()
func (_Casper *CasperTransactor) AddProviderMachine(opts *bind.TransactOpts, ip string, size *big.Int) (*types.Transaction, error) {
	return _Casper.contract.Transact(opts, "addProviderMachine", ip, size)
}

// AddProviderMachine is a paid mutator transaction binding the contract method 0xfde18f47.
//
// Solidity: function addProviderMachine(ip string, size uint256) returns()
func (_Casper *CasperSession) AddProviderMachine(ip string, size *big.Int) (*types.Transaction, error) {
	return _Casper.Contract.AddProviderMachine(&_Casper.TransactOpts, ip, size)
}

// AddProviderMachine is a paid mutator transaction binding the contract method 0xfde18f47.
//
// Solidity: function addProviderMachine(ip string, size uint256) returns()
func (_Casper *CasperTransactorSession) AddProviderMachine(ip string, size *big.Int) (*types.Transaction, error) {
	return _Casper.Contract.AddProviderMachine(&_Casper.TransactOpts, ip, size)
}

// AddToken is a paid mutator transaction binding the contract method 0x179d375c.
//
// Solidity: function addToken(amount uint256) returns()
func (_Casper *CasperTransactor) AddToken(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _Casper.contract.Transact(opts, "addToken", amount)
}

// AddToken is a paid mutator transaction binding the contract method 0x179d375c.
//
// Solidity: function addToken(amount uint256) returns()
func (_Casper *CasperSession) AddToken(amount *big.Int) (*types.Transaction, error) {
	return _Casper.Contract.AddToken(&_Casper.TransactOpts, amount)
}

// AddToken is a paid mutator transaction binding the contract method 0x179d375c.
//
// Solidity: function addToken(amount uint256) returns()
func (_Casper *CasperTransactorSession) AddToken(amount *big.Int) (*types.Transaction, error) {
	return _Casper.Contract.AddToken(&_Casper.TransactOpts, amount)
}

// ClearPrepay is a paid mutator transaction binding the contract method 0x6e2e1887.
//
// Solidity: function clearPrepay() returns()
func (_Casper *CasperTransactor) ClearPrepay(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Casper.contract.Transact(opts, "clearPrepay")
}

// ClearPrepay is a paid mutator transaction binding the contract method 0x6e2e1887.
//
// Solidity: function clearPrepay() returns()
func (_Casper *CasperSession) ClearPrepay() (*types.Transaction, error) {
	return _Casper.Contract.ClearPrepay(&_Casper.TransactOpts)
}

// ClearPrepay is a paid mutator transaction binding the contract method 0x6e2e1887.
//
// Solidity: function clearPrepay() returns()
func (_Casper *CasperTransactorSession) ClearPrepay() (*types.Transaction, error) {
	return _Casper.Contract.ClearPrepay(&_Casper.TransactOpts)
}

// ConfirmDownload is a paid mutator transaction binding the contract method 0x28748e91.
//
// Solidity: function confirmDownload() returns()
func (_Casper *CasperTransactor) ConfirmDownload(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Casper.contract.Transact(opts, "confirmDownload")
}

// ConfirmDownload is a paid mutator transaction binding the contract method 0x28748e91.
//
// Solidity: function confirmDownload() returns()
func (_Casper *CasperSession) ConfirmDownload() (*types.Transaction, error) {
	return _Casper.Contract.ConfirmDownload(&_Casper.TransactOpts)
}

// ConfirmDownload is a paid mutator transaction binding the contract method 0x28748e91.
//
// Solidity: function confirmDownload() returns()
func (_Casper *CasperTransactorSession) ConfirmDownload() (*types.Transaction, error) {
	return _Casper.Contract.ConfirmDownload(&_Casper.TransactOpts)
}

// ConfirmTransfer is a paid mutator transaction binding the contract method 0xbaa49301.
//
// Solidity: function confirmTransfer() returns()
func (_Casper *CasperTransactor) ConfirmTransfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Casper.contract.Transact(opts, "confirmTransfer")
}

// ConfirmTransfer is a paid mutator transaction binding the contract method 0xbaa49301.
//
// Solidity: function confirmTransfer() returns()
func (_Casper *CasperSession) ConfirmTransfer() (*types.Transaction, error) {
	return _Casper.Contract.ConfirmTransfer(&_Casper.TransactOpts)
}

// ConfirmTransfer is a paid mutator transaction binding the contract method 0xbaa49301.
//
// Solidity: function confirmTransfer() returns()
func (_Casper *CasperTransactorSession) ConfirmTransfer() (*types.Transaction, error) {
	return _Casper.Contract.ConfirmTransfer(&_Casper.TransactOpts)
}

// ConfirmUpdate is a paid mutator transaction binding the contract method 0x5a44a117.
//
// Solidity: function confirmUpdate(ip string, hash string, size uint256) returns()
func (_Casper *CasperTransactor) ConfirmUpdate(opts *bind.TransactOpts, ip string, hash string, size *big.Int) (*types.Transaction, error) {
	return _Casper.contract.Transact(opts, "confirmUpdate", ip, hash, size)
}

// ConfirmUpdate is a paid mutator transaction binding the contract method 0x5a44a117.
//
// Solidity: function confirmUpdate(ip string, hash string, size uint256) returns()
func (_Casper *CasperSession) ConfirmUpdate(ip string, hash string, size *big.Int) (*types.Transaction, error) {
	return _Casper.Contract.ConfirmUpdate(&_Casper.TransactOpts, ip, hash, size)
}

// ConfirmUpdate is a paid mutator transaction binding the contract method 0x5a44a117.
//
// Solidity: function confirmUpdate(ip string, hash string, size uint256) returns()
func (_Casper *CasperTransactorSession) ConfirmUpdate(ip string, hash string, size *big.Int) (*types.Transaction, error) {
	return _Casper.Contract.ConfirmUpdate(&_Casper.TransactOpts, ip, hash, size)
}

// ConfirmUpload is a paid mutator transaction binding the contract method 0x09f1179b.
//
// Solidity: function confirmUpload(ip string, hash string, size uint256) returns()
func (_Casper *CasperTransactor) ConfirmUpload(opts *bind.TransactOpts, ip string, hash string, size *big.Int) (*types.Transaction, error) {
	return _Casper.contract.Transact(opts, "confirmUpload", ip, hash, size)
}

// ConfirmUpload is a paid mutator transaction binding the contract method 0x09f1179b.
//
// Solidity: function confirmUpload(ip string, hash string, size uint256) returns()
func (_Casper *CasperSession) ConfirmUpload(ip string, hash string, size *big.Int) (*types.Transaction, error) {
	return _Casper.Contract.ConfirmUpload(&_Casper.TransactOpts, ip, hash, size)
}

// ConfirmUpload is a paid mutator transaction binding the contract method 0x09f1179b.
//
// Solidity: function confirmUpload(ip string, hash string, size uint256) returns()
func (_Casper *CasperTransactorSession) ConfirmUpload(ip string, hash string, size *big.Int) (*types.Transaction, error) {
	return _Casper.Contract.ConfirmUpload(&_Casper.TransactOpts, ip, hash, size)
}

// GetPingTarget is a paid mutator transaction binding the contract method 0x1acaa833.
//
// Solidity: function getPingTarget(srcIp string) returns()
func (_Casper *CasperTransactor) GetPingTarget(opts *bind.TransactOpts, srcIp string) (*types.Transaction, error) {
	return _Casper.contract.Transact(opts, "getPingTarget", srcIp)
}

// GetPingTarget is a paid mutator transaction binding the contract method 0x1acaa833.
//
// Solidity: function getPingTarget(srcIp string) returns()
func (_Casper *CasperSession) GetPingTarget(srcIp string) (*types.Transaction, error) {
	return _Casper.Contract.GetPingTarget(&_Casper.TransactOpts, srcIp)
}

// GetPingTarget is a paid mutator transaction binding the contract method 0x1acaa833.
//
// Solidity: function getPingTarget(srcIp string) returns()
func (_Casper *CasperTransactorSession) GetPingTarget(srcIp string) (*types.Transaction, error) {
	return _Casper.Contract.GetPingTarget(&_Casper.TransactOpts, srcIp)
}

// NotifyDelete is a paid mutator transaction binding the contract method 0xc72f7c54.
//
// Solidity: function notifyDelete(uuid uint128) returns()
func (_Casper *CasperTransactor) NotifyDelete(opts *bind.TransactOpts, uuid *big.Int) (*types.Transaction, error) {
	return _Casper.contract.Transact(opts, "notifyDelete", uuid)
}

// NotifyDelete is a paid mutator transaction binding the contract method 0xc72f7c54.
//
// Solidity: function notifyDelete(uuid uint128) returns()
func (_Casper *CasperSession) NotifyDelete(uuid *big.Int) (*types.Transaction, error) {
	return _Casper.Contract.NotifyDelete(&_Casper.TransactOpts, uuid)
}

// NotifyDelete is a paid mutator transaction binding the contract method 0xc72f7c54.
//
// Solidity: function notifyDelete(uuid uint128) returns()
func (_Casper *CasperTransactorSession) NotifyDelete(uuid *big.Int) (*types.Transaction, error) {
	return _Casper.Contract.NotifyDelete(&_Casper.TransactOpts, uuid)
}

// NotifyReplicationSuccess is a paid mutator transaction binding the contract method 0x8a2786a9.
//
// Solidity: function notifyReplicationSuccess(chunk uint128, size uint256, ip string) returns()
func (_Casper *CasperTransactor) NotifyReplicationSuccess(opts *bind.TransactOpts, chunk *big.Int, size *big.Int, ip string) (*types.Transaction, error) {
	return _Casper.contract.Transact(opts, "notifyReplicationSuccess", chunk, size, ip)
}

// NotifyReplicationSuccess is a paid mutator transaction binding the contract method 0x8a2786a9.
//
// Solidity: function notifyReplicationSuccess(chunk uint128, size uint256, ip string) returns()
func (_Casper *CasperSession) NotifyReplicationSuccess(chunk *big.Int, size *big.Int, ip string) (*types.Transaction, error) {
	return _Casper.Contract.NotifyReplicationSuccess(&_Casper.TransactOpts, chunk, size, ip)
}

// NotifyReplicationSuccess is a paid mutator transaction binding the contract method 0x8a2786a9.
//
// Solidity: function notifyReplicationSuccess(chunk uint128, size uint256, ip string) returns()
func (_Casper *CasperTransactorSession) NotifyReplicationSuccess(chunk *big.Int, size *big.Int, ip string) (*types.Transaction, error) {
	return _Casper.Contract.NotifyReplicationSuccess(&_Casper.TransactOpts, chunk, size, ip)
}

// NotifyReplicationTarget is a paid mutator transaction binding the contract method 0x606fcd4d.
//
// Solidity: function notifyReplicationTarget(chunk uint128, size uint256, ip string) returns()
func (_Casper *CasperTransactor) NotifyReplicationTarget(opts *bind.TransactOpts, chunk *big.Int, size *big.Int, ip string) (*types.Transaction, error) {
	return _Casper.contract.Transact(opts, "notifyReplicationTarget", chunk, size, ip)
}

// NotifyReplicationTarget is a paid mutator transaction binding the contract method 0x606fcd4d.
//
// Solidity: function notifyReplicationTarget(chunk uint128, size uint256, ip string) returns()
func (_Casper *CasperSession) NotifyReplicationTarget(chunk *big.Int, size *big.Int, ip string) (*types.Transaction, error) {
	return _Casper.Contract.NotifyReplicationTarget(&_Casper.TransactOpts, chunk, size, ip)
}

// NotifyReplicationTarget is a paid mutator transaction binding the contract method 0x606fcd4d.
//
// Solidity: function notifyReplicationTarget(chunk uint128, size uint256, ip string) returns()
func (_Casper *CasperTransactorSession) NotifyReplicationTarget(chunk *big.Int, size *big.Int, ip string) (*types.Transaction, error) {
	return _Casper.Contract.NotifyReplicationTarget(&_Casper.TransactOpts, chunk, size, ip)
}

// NotifySpaceFreed is a paid mutator transaction binding the contract method 0xed0e4f82.
//
// Solidity: function notifySpaceFreed(ip string, hash string, size uint256) returns()
func (_Casper *CasperTransactor) NotifySpaceFreed(opts *bind.TransactOpts, ip string, hash string, size *big.Int) (*types.Transaction, error) {
	return _Casper.contract.Transact(opts, "notifySpaceFreed", ip, hash, size)
}

// NotifySpaceFreed is a paid mutator transaction binding the contract method 0xed0e4f82.
//
// Solidity: function notifySpaceFreed(ip string, hash string, size uint256) returns()
func (_Casper *CasperSession) NotifySpaceFreed(ip string, hash string, size *big.Int) (*types.Transaction, error) {
	return _Casper.Contract.NotifySpaceFreed(&_Casper.TransactOpts, ip, hash, size)
}

// NotifySpaceFreed is a paid mutator transaction binding the contract method 0xed0e4f82.
//
// Solidity: function notifySpaceFreed(ip string, hash string, size uint256) returns()
func (_Casper *CasperTransactorSession) NotifySpaceFreed(ip string, hash string, size *big.Int) (*types.Transaction, error) {
	return _Casper.Contract.NotifySpaceFreed(&_Casper.TransactOpts, ip, hash, size)
}

// PrePay is a paid mutator transaction binding the contract method 0xaac80f47.
//
// Solidity: function prePay(pay uint256) returns()
func (_Casper *CasperTransactor) PrePay(opts *bind.TransactOpts, pay *big.Int) (*types.Transaction, error) {
	return _Casper.contract.Transact(opts, "prePay", pay)
}

// PrePay is a paid mutator transaction binding the contract method 0xaac80f47.
//
// Solidity: function prePay(pay uint256) returns()
func (_Casper *CasperSession) PrePay(pay *big.Int) (*types.Transaction, error) {
	return _Casper.Contract.PrePay(&_Casper.TransactOpts, pay)
}

// PrePay is a paid mutator transaction binding the contract method 0xaac80f47.
//
// Solidity: function prePay(pay uint256) returns()
func (_Casper *CasperTransactorSession) PrePay(pay *big.Int) (*types.Transaction, error) {
	return _Casper.Contract.PrePay(&_Casper.TransactOpts, pay)
}

// RegisterProvider is a paid mutator transaction binding the contract method 0xbb66e09d.
//
// Solidity: function registerProvider(ip string, size uint256) returns()
func (_Casper *CasperTransactor) RegisterProvider(opts *bind.TransactOpts, ip string, size *big.Int) (*types.Transaction, error) {
	return _Casper.contract.Transact(opts, "registerProvider", ip, size)
}

// RegisterProvider is a paid mutator transaction binding the contract method 0xbb66e09d.
//
// Solidity: function registerProvider(ip string, size uint256) returns()
func (_Casper *CasperSession) RegisterProvider(ip string, size *big.Int) (*types.Transaction, error) {
	return _Casper.Contract.RegisterProvider(&_Casper.TransactOpts, ip, size)
}

// RegisterProvider is a paid mutator transaction binding the contract method 0xbb66e09d.
//
// Solidity: function registerProvider(ip string, size uint256) returns()
func (_Casper *CasperTransactorSession) RegisterProvider(ip string, size *big.Int) (*types.Transaction, error) {
	return _Casper.Contract.RegisterProvider(&_Casper.TransactOpts, ip, size)
}

// RemoveAllPeers is a paid mutator transaction binding the contract method 0xc13aaeaf.
//
// Solidity: function removeAllPeers() returns()
func (_Casper *CasperTransactor) RemoveAllPeers(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Casper.contract.Transact(opts, "removeAllPeers")
}

// RemoveAllPeers is a paid mutator transaction binding the contract method 0xc13aaeaf.
//
// Solidity: function removeAllPeers() returns()
func (_Casper *CasperSession) RemoveAllPeers() (*types.Transaction, error) {
	return _Casper.Contract.RemoveAllPeers(&_Casper.TransactOpts)
}

// RemoveAllPeers is a paid mutator transaction binding the contract method 0xc13aaeaf.
//
// Solidity: function removeAllPeers() returns()
func (_Casper *CasperTransactorSession) RemoveAllPeers() (*types.Transaction, error) {
	return _Casper.Contract.RemoveAllPeers(&_Casper.TransactOpts)
}

// RemoveProviderMachine is a paid mutator transaction binding the contract method 0x5107e4ee.
//
// Solidity: function removeProviderMachine(ip string) returns()
func (_Casper *CasperTransactor) RemoveProviderMachine(opts *bind.TransactOpts, ip string) (*types.Transaction, error) {
	return _Casper.contract.Transact(opts, "removeProviderMachine", ip)
}

// RemoveProviderMachine is a paid mutator transaction binding the contract method 0x5107e4ee.
//
// Solidity: function removeProviderMachine(ip string) returns()
func (_Casper *CasperSession) RemoveProviderMachine(ip string) (*types.Transaction, error) {
	return _Casper.Contract.RemoveProviderMachine(&_Casper.TransactOpts, ip)
}

// RemoveProviderMachine is a paid mutator transaction binding the contract method 0x5107e4ee.
//
// Solidity: function removeProviderMachine(ip string) returns()
func (_Casper *CasperTransactorSession) RemoveProviderMachine(ip string) (*types.Transaction, error) {
	return _Casper.Contract.RemoveProviderMachine(&_Casper.TransactOpts, ip)
}

// SendPingResult is a paid mutator transaction binding the contract method 0xdc3dd578.
//
// Solidity: function sendPingResult(ip string, success bool) returns()
func (_Casper *CasperTransactor) SendPingResult(opts *bind.TransactOpts, ip string, success bool) (*types.Transaction, error) {
	return _Casper.contract.Transact(opts, "sendPingResult", ip, success)
}

// SendPingResult is a paid mutator transaction binding the contract method 0xdc3dd578.
//
// Solidity: function sendPingResult(ip string, success bool) returns()
func (_Casper *CasperSession) SendPingResult(ip string, success bool) (*types.Transaction, error) {
	return _Casper.Contract.SendPingResult(&_Casper.TransactOpts, ip, success)
}

// SendPingResult is a paid mutator transaction binding the contract method 0xdc3dd578.
//
// Solidity: function sendPingResult(ip string, success bool) returns()
func (_Casper *CasperTransactorSession) SendPingResult(ip string, success bool) (*types.Transaction, error) {
	return _Casper.Contract.SendPingResult(&_Casper.TransactOpts, ip, success)
}

// SetBootstrap is a paid mutator transaction binding the contract method 0xa746dadb.
//
// Solidity: function setBootstrap(ip string) returns()
func (_Casper *CasperTransactor) SetBootstrap(opts *bind.TransactOpts, ip string) (*types.Transaction, error) {
	return _Casper.contract.Transact(opts, "setBootstrap", ip)
}

// SetBootstrap is a paid mutator transaction binding the contract method 0xa746dadb.
//
// Solidity: function setBootstrap(ip string) returns()
func (_Casper *CasperSession) SetBootstrap(ip string) (*types.Transaction, error) {
	return _Casper.Contract.SetBootstrap(&_Casper.TransactOpts, ip)
}

// SetBootstrap is a paid mutator transaction binding the contract method 0xa746dadb.
//
// Solidity: function setBootstrap(ip string) returns()
func (_Casper *CasperTransactorSession) SetBootstrap(ip string) (*types.Transaction, error) {
	return _Casper.Contract.SetBootstrap(&_Casper.TransactOpts, ip)
}

// StringToBytes32 is a paid mutator transaction binding the contract method 0xcfb51928.
//
// Solidity: function stringToBytes32(source string) returns(result bytes32)
func (_Casper *CasperTransactor) StringToBytes32(opts *bind.TransactOpts, source string) (*types.Transaction, error) {
	return _Casper.contract.Transact(opts, "stringToBytes32", source)
}

// StringToBytes32 is a paid mutator transaction binding the contract method 0xcfb51928.
//
// Solidity: function stringToBytes32(source string) returns(result bytes32)
func (_Casper *CasperSession) StringToBytes32(source string) (*types.Transaction, error) {
	return _Casper.Contract.StringToBytes32(&_Casper.TransactOpts, source)
}

// StringToBytes32 is a paid mutator transaction binding the contract method 0xcfb51928.
//
// Solidity: function stringToBytes32(source string) returns(result bytes32)
func (_Casper *CasperTransactorSession) StringToBytes32(source string) (*types.Transaction, error) {
	return _Casper.Contract.StringToBytes32(&_Casper.TransactOpts, source)
}

// CasperLogIterator is returned from FilterLog and is used to iterate over the raw logs and unpacked data for Log events raised by the Casper contract.
type CasperLogIterator struct {
	Event *CasperLog // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *CasperLogIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(CasperLog)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(CasperLog)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *CasperLogIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *CasperLogIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// CasperLog represents a Log event raised by the Casper contract.
type CasperLog struct {
	Info string
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterLog is a free log retrieval operation binding the contract event 0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab.
//
// Solidity: event Log(info string)
func (_Casper *CasperFilterer) FilterLog(opts *bind.FilterOpts) (*CasperLogIterator, error) {

	logs, sub, err := _Casper.contract.FilterLogs(opts, "Log")
	if err != nil {
		return nil, err
	}
	return &CasperLogIterator{contract: _Casper.contract, event: "Log", logs: logs, sub: sub}, nil
}

// WatchLog is a free log subscription operation binding the contract event 0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab.
//
// Solidity: event Log(info string)
func (_Casper *CasperFilterer) WatchLog(opts *bind.WatchOpts, sink chan<- *CasperLog) (event.Subscription, error) {

	logs, sub, err := _Casper.contract.WatchLogs(opts, "Log")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(CasperLog)
				if err := _Casper.contract.UnpackLog(event, "Log", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// CasperProviderCheckEventIterator is returned from FilterProviderCheckEvent and is used to iterate over the raw logs and unpacked data for ProviderCheckEvent events raised by the Casper contract.
type CasperProviderCheckEventIterator struct {
	Event *CasperProviderCheckEvent // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *CasperProviderCheckEventIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(CasperProviderCheckEvent)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(CasperProviderCheckEvent)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *CasperProviderCheckEventIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *CasperProviderCheckEventIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// CasperProviderCheckEvent represents a ProviderCheckEvent event raised by the Casper contract.
type CasperProviderCheckEvent struct {
	Raw types.Log // Blockchain specific contextual infos
}

// FilterProviderCheckEvent is a free log retrieval operation binding the contract event 0x3ba3d58761f64d3f96a3d0808397c076d4936a34f18b36fb0b297a93ee8a83b9.
//
// Solidity: event ProviderCheckEvent()
func (_Casper *CasperFilterer) FilterProviderCheckEvent(opts *bind.FilterOpts) (*CasperProviderCheckEventIterator, error) {

	logs, sub, err := _Casper.contract.FilterLogs(opts, "ProviderCheckEvent")
	if err != nil {
		return nil, err
	}
	return &CasperProviderCheckEventIterator{contract: _Casper.contract, event: "ProviderCheckEvent", logs: logs, sub: sub}, nil
}

// WatchProviderCheckEvent is a free log subscription operation binding the contract event 0x3ba3d58761f64d3f96a3d0808397c076d4936a34f18b36fb0b297a93ee8a83b9.
//
// Solidity: event ProviderCheckEvent()
func (_Casper *CasperFilterer) WatchProviderCheckEvent(opts *bind.WatchOpts, sink chan<- *CasperProviderCheckEvent) (event.Subscription, error) {

	logs, sub, err := _Casper.contract.WatchLogs(opts, "ProviderCheckEvent")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(CasperProviderCheckEvent)
				if err := _Casper.contract.UnpackLog(event, "ProviderCheckEvent", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// CasperProviderOfflineIterator is returned from FilterProviderOffline and is used to iterate over the raw logs and unpacked data for ProviderOffline events raised by the Casper contract.
type CasperProviderOfflineIterator struct {
	Event *CasperProviderOffline // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *CasperProviderOfflineIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(CasperProviderOffline)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(CasperProviderOffline)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *CasperProviderOfflineIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *CasperProviderOfflineIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// CasperProviderOffline represents a ProviderOffline event raised by the Casper contract.
type CasperProviderOffline struct {
	Banned string
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterProviderOffline is a free log retrieval operation binding the contract event 0x8374d399a7ca1b13cfc5d10c87699bb613f7f16a494fb5900a9062c28de428d6.
//
// Solidity: event ProviderOffline(banned string)
func (_Casper *CasperFilterer) FilterProviderOffline(opts *bind.FilterOpts) (*CasperProviderOfflineIterator, error) {

	logs, sub, err := _Casper.contract.FilterLogs(opts, "ProviderOffline")
	if err != nil {
		return nil, err
	}
	return &CasperProviderOfflineIterator{contract: _Casper.contract, event: "ProviderOffline", logs: logs, sub: sub}, nil
}

// WatchProviderOffline is a free log subscription operation binding the contract event 0x8374d399a7ca1b13cfc5d10c87699bb613f7f16a494fb5900a9062c28de428d6.
//
// Solidity: event ProviderOffline(banned string)
func (_Casper *CasperFilterer) WatchProviderOffline(opts *bind.WatchOpts, sink chan<- *CasperProviderOffline) (event.Subscription, error) {

	logs, sub, err := _Casper.contract.WatchLogs(opts, "ProviderOffline")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(CasperProviderOffline)
				if err := _Casper.contract.UnpackLog(event, "ProviderOffline", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// CasperReturnStringIterator is returned from FilterReturnString and is used to iterate over the raw logs and unpacked data for ReturnString events raised by the Casper contract.
type CasperReturnStringIterator struct {
	Event *CasperReturnString // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *CasperReturnStringIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(CasperReturnString)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(CasperReturnString)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *CasperReturnStringIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *CasperReturnStringIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// CasperReturnString represents a ReturnString event raised by the Casper contract.
type CasperReturnString struct {
	Val string
	Raw types.Log // Blockchain specific contextual infos
}

// FilterReturnString is a free log retrieval operation binding the contract event 0x9e91c0d67653515860c12ff5c5211b3ef5b98565f70728283708dd7bf754c4f1.
//
// Solidity: event ReturnString(val string)
func (_Casper *CasperFilterer) FilterReturnString(opts *bind.FilterOpts) (*CasperReturnStringIterator, error) {

	logs, sub, err := _Casper.contract.FilterLogs(opts, "ReturnString")
	if err != nil {
		return nil, err
	}
	return &CasperReturnStringIterator{contract: _Casper.contract, event: "ReturnString", logs: logs, sub: sub}, nil
}

// WatchReturnString is a free log subscription operation binding the contract event 0x9e91c0d67653515860c12ff5c5211b3ef5b98565f70728283708dd7bf754c4f1.
//
// Solidity: event ReturnString(val string)
func (_Casper *CasperFilterer) WatchReturnString(opts *bind.WatchOpts, sink chan<- *CasperReturnString) (event.Subscription, error) {

	logs, sub, err := _Casper.contract.WatchLogs(opts, "ReturnString")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(CasperReturnString)
				if err := _Casper.contract.UnpackLog(event, "ReturnString", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

